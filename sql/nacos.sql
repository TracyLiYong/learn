/*
 Navicat Premium Data Transfer

 Source Server         : 本地集群-master
 Source Server Type    : MySQL
 Source Server Version : 80023
 Source Host           : 192.168.137.200:36005
 Source Schema         : nacos

 Target Server Type    : MySQL
 Target Server Version : 80023
 File Encoding         : 65001

 Date: 24/08/2021 21:50:07
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 363 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (162, 'service.vgroupMapping.my_test_tx_group', 'SEATA_GROUP', 'seata-server-cluster', 'a80b64927c783df0b4195faa3a897d24', '2021-03-03 00:48:55', '2021-03-04 07:24:49', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (163, 'service.seata-server-cluster.grouplist', 'SEATA_GROUP', '127.0.0.1:8091', 'c32ce0d3e264525dcdada751f98143a3', '2021-03-03 00:48:56', '2021-03-12 07:52:37', NULL, '192.168.137.1', '', 'seata-dev', '', '', '', '', '');
INSERT INTO `config_info` VALUES (164, 'store.mode', 'SEATA_GROUP', 'db', 'd77d5e503ad1439f585ac494268b351b', '2021-03-03 00:48:56', '2021-03-04 07:24:55', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (165, 'store.db.datasource', 'SEATA_GROUP', 'druid', '3d650fb8a5df01600281d48c47c9fa60', '2021-03-03 00:48:56', '2021-03-04 07:24:55', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (166, 'store.db.dbType', 'SEATA_GROUP', 'mysql', '81c3b080dad537de7e10e0987a4bf52e', '2021-03-03 00:48:57', '2021-03-04 07:24:55', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (167, 'store.db.driverClassName', 'SEATA_GROUP', 'com.mysql.cj.jdbc.Driver', '33763409bb7f4838bde4fae9540433e4', '2021-03-03 00:48:57', '2021-03-04 07:24:56', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (168, 'store.db.url', 'SEATA_GROUP', 'jdbc:mysql://192.168.137.200:3308/seata?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai', '0cafe0d149d1b85fc39f2416c995eda8', '2021-03-03 00:48:57', '2021-03-12 07:56:56', NULL, '192.168.137.1', '', 'seata-dev', '', '', '', '', '');
INSERT INTO `config_info` VALUES (169, 'store.db.user', 'SEATA_GROUP', 'root', '63a9f0ea7bb98050796b649e85481845', '2021-03-03 00:48:58', '2021-03-04 07:24:56', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (170, 'store.db.password', 'SEATA_GROUP', 'root', '63a9f0ea7bb98050796b649e85481845', '2021-03-03 00:48:58', '2021-03-04 07:24:57', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (249, 'transport.type', 'SEATA_GROUP', 'TCP', 'b136ef5f6a01d816991fe3cf7a6ac763', '2021-03-04 07:24:44', '2021-03-04 07:24:44', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (250, 'transport.server', 'SEATA_GROUP', 'NIO', 'b6d9dfc0fb54277321cebc0fff55df2f', '2021-03-04 07:24:45', '2021-03-04 07:24:45', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (251, 'transport.heartbeat', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2021-03-04 07:24:45', '2021-03-04 07:24:45', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (252, 'transport.enableClientBatchSendRequest', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2021-03-04 07:24:45', '2021-03-04 07:24:45', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (253, 'transport.threadFactory.bossThreadPrefix', 'SEATA_GROUP', 'NettyBoss', '0f8db59a3b7f2823f38a70c308361836', '2021-03-04 07:24:45', '2021-03-04 07:24:45', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (254, 'transport.threadFactory.workerThreadPrefix', 'SEATA_GROUP', 'NettyServerNIOWorker', 'a78ec7ef5d1631754c4e72ae8a3e9205', '2021-03-04 07:24:46', '2021-03-04 07:24:46', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (255, 'transport.threadFactory.serverExecutorThreadPrefix', 'SEATA_GROUP', 'NettyServerBizHandler', '11a36309f3d9df84fa8b59cf071fa2da', '2021-03-04 07:24:46', '2021-03-04 07:24:46', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (256, 'transport.threadFactory.shareBossWorker', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2021-03-04 07:24:46', '2021-03-04 07:24:46', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (257, 'transport.threadFactory.clientSelectorThreadPrefix', 'SEATA_GROUP', 'NettyClientSelector', 'cd7ec5a06541e75f5a7913752322c3af', '2021-03-04 07:24:47', '2021-03-04 07:24:47', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (258, 'transport.threadFactory.clientSelectorThreadSize', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2021-03-04 07:24:47', '2021-03-04 07:24:47', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (259, 'transport.threadFactory.clientWorkerThreadPrefix', 'SEATA_GROUP', 'NettyClientWorkerThread', '61cf4e69a56354cf72f46dc86414a57e', '2021-03-04 07:24:47', '2021-03-04 07:24:47', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (260, 'transport.threadFactory.bossThreadSize', 'SEATA_GROUP', '1', 'c4ca4238a0b923820dcc509a6f75849b', '2021-03-04 07:24:48', '2021-03-04 07:24:48', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (261, 'transport.threadFactory.workerThreadSize', 'SEATA_GROUP', 'default', 'c21f969b5f03d33d43e04f8f136e7682', '2021-03-04 07:24:48', '2021-03-04 07:24:48', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (262, 'transport.shutdown.wait', 'SEATA_GROUP', '3', 'eccbc87e4b5ce2fe28308fd9f2a7baf3', '2021-03-04 07:24:48', '2021-03-04 07:24:48', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (264, 'service.enableDegrade', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2021-03-04 07:24:49', '2021-03-04 07:24:49', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (265, 'service.disableGlobalTransaction', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2021-03-04 07:24:49', '2021-03-04 07:24:49', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (266, 'client.rm.asyncCommitBufferLimit', 'SEATA_GROUP', '10000', 'b7a782741f667201b54880c925faec4b', '2021-03-04 07:24:50', '2021-03-04 07:24:50', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (267, 'client.rm.lock.retryInterval', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2021-03-04 07:24:50', '2021-03-10 06:25:10', NULL, '116.25.45.203', '', 'seata-dev', '', '', '', '', '');
INSERT INTO `config_info` VALUES (268, 'client.rm.lock.retryTimes', 'SEATA_GROUP', '30', '34173cb38f07f89ddbebc2ac9128303f', '2021-03-04 07:24:50', '2021-03-10 06:24:59', NULL, '116.25.45.203', '', 'seata-dev', '', '', '', '', '');
INSERT INTO `config_info` VALUES (269, 'client.rm.lock.retryPolicyBranchRollbackOnConflict', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2021-03-04 07:24:51', '2021-03-04 07:24:51', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (270, 'client.rm.reportRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2021-03-04 07:24:51', '2021-03-04 07:24:51', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (271, 'client.rm.tableMetaCheckEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2021-03-04 07:24:51', '2021-03-04 07:24:51', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (272, 'client.rm.sqlParserType', 'SEATA_GROUP', 'druid', '3d650fb8a5df01600281d48c47c9fa60', '2021-03-04 07:24:52', '2021-03-04 07:24:52', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (273, 'client.rm.reportSuccessEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2021-03-04 07:24:52', '2021-03-04 07:24:52', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (274, 'client.rm.sagaBranchRegisterEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2021-03-04 07:24:52', '2021-03-04 07:24:52', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (275, 'client.tm.commitRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2021-03-04 07:24:53', '2021-03-04 07:24:53', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (276, 'client.tm.rollbackRetryCount', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2021-03-04 07:24:53', '2021-03-04 07:24:53', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (277, 'client.tm.defaultGlobalTransactionTimeout', 'SEATA_GROUP', '60000', '2b4226dd7ed6eb2d419b881f3ae9c97c', '2021-03-04 07:24:53', '2021-03-04 07:24:53', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (278, 'client.tm.degradeCheck', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2021-03-04 07:24:54', '2021-03-04 07:24:54', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (279, 'client.tm.degradeCheckAllowTimes', 'SEATA_GROUP', '10', 'd3d9446802a44259755d38e6d163e820', '2021-03-04 07:24:54', '2021-03-04 07:24:54', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (280, 'client.tm.degradeCheckPeriod', 'SEATA_GROUP', '2000', '08f90c1a417155361a5c4b8d297e0d78', '2021-03-04 07:24:54', '2021-03-04 07:24:54', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (288, 'store.db.minConn', 'SEATA_GROUP', '5', 'e4da3b7fbbce2345d7772b0674a318d5', '2021-03-04 07:24:57', '2021-03-04 07:24:57', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (289, 'store.db.maxConn', 'SEATA_GROUP', '30', '34173cb38f07f89ddbebc2ac9128303f', '2021-03-04 07:24:57', '2021-03-04 07:24:57', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (290, 'store.db.globalTable', 'SEATA_GROUP', 'global_table', '8b28fb6bb4c4f984df2709381f8eba2b', '2021-03-04 07:24:58', '2021-03-04 07:24:58', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (291, 'store.db.branchTable', 'SEATA_GROUP', 'branch_table', '54bcdac38cf62e103fe115bcf46a660c', '2021-03-04 07:24:58', '2021-03-04 07:24:58', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (292, 'store.db.queryLimit', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2021-03-04 07:24:58', '2021-03-04 07:24:58', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (293, 'store.db.lockTable', 'SEATA_GROUP', 'lock_table', '55e0cae3b6dc6696b768db90098b8f2f', '2021-03-04 07:24:58', '2021-03-04 07:24:58', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (294, 'store.db.maxWait', 'SEATA_GROUP', '5000', 'a35fe7f7fe8217b4369a0af4244d1fca', '2021-03-04 07:24:59', '2021-03-04 07:24:59', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (295, 'server.recovery.committingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2021-03-04 07:24:59', '2021-03-04 07:24:59', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (296, 'server.recovery.asynCommittingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2021-03-04 07:24:59', '2021-03-04 07:24:59', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (297, 'server.recovery.rollbackingRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2021-03-04 07:25:00', '2021-03-04 07:25:00', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (298, 'server.recovery.timeoutRetryPeriod', 'SEATA_GROUP', '1000', 'a9b7ba70783b617e9998dc4dd82eb3c5', '2021-03-04 07:25:00', '2021-03-04 07:25:00', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (299, 'server.maxCommitRetryTimeout', 'SEATA_GROUP', '-1', '6bb61e3b7bce0931da574d19d1d82c88', '2021-03-04 07:25:00', '2021-03-04 07:25:00', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (300, 'server.maxRollbackRetryTimeout', 'SEATA_GROUP', '-1', '6bb61e3b7bce0931da574d19d1d82c88', '2021-03-04 07:25:01', '2021-03-04 07:25:01', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (301, 'server.rollbackRetryTimeoutUnlockEnable', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2021-03-04 07:25:01', '2021-03-04 07:25:01', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (302, 'client.undo.dataValidation', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2021-03-04 07:25:01', '2021-03-04 07:25:01', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (303, 'client.undo.logSerialization', 'SEATA_GROUP', 'jackson', 'b41779690b83f182acc67d6388c7bac9', '2021-03-04 07:25:02', '2021-03-04 07:25:02', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (304, 'client.undo.onlyCareUpdateColumns', 'SEATA_GROUP', 'true', 'b326b5062b2f0e69046810717534cb09', '2021-03-04 07:25:02', '2021-03-04 07:25:02', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (305, 'server.undo.logSaveDays', 'SEATA_GROUP', '7', '8f14e45fceea167a5a36dedd4bea2543', '2021-03-04 07:25:02', '2021-03-04 07:25:02', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (306, 'server.undo.logDeletePeriod', 'SEATA_GROUP', '86400000', 'f4c122804fe9076cb2710f55c3c6e346', '2021-03-04 07:25:03', '2021-03-04 07:25:03', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (307, 'client.undo.logTable', 'SEATA_GROUP', 'undo_log', '2842d229c24afe9e61437135e8306614', '2021-03-04 07:25:03', '2021-03-04 07:25:03', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (308, 'log.exceptionRate', 'SEATA_GROUP', '100', 'f899139df5e1059396431415e770c6dd', '2021-03-04 07:25:03', '2021-03-04 07:25:03', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (309, 'transport.serialization', 'SEATA_GROUP', 'seata', 'b943081c423b9a5416a706524ee05d40', '2021-03-04 07:25:03', '2021-03-04 07:25:03', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (310, 'transport.compressor', 'SEATA_GROUP', 'none', '334c4a4c42fdb79d7ebc3e73b517e6f8', '2021-03-04 07:25:04', '2021-03-04 07:25:04', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (311, 'metrics.enabled', 'SEATA_GROUP', 'false', '68934a3e9455fa72420237eb05902327', '2021-03-04 07:25:04', '2021-03-04 07:25:04', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (312, 'metrics.registryType', 'SEATA_GROUP', 'compact', '7cf74ca49c304df8150205fc915cd465', '2021-03-04 07:25:04', '2021-03-04 07:25:04', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (313, 'metrics.exporterList', 'SEATA_GROUP', 'prometheus', 'e4f00638b8a10e6994e67af2f832d51c', '2021-03-04 07:25:05', '2021-03-04 07:25:05', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (314, 'metrics.exporterPrometheusPort', 'SEATA_GROUP', '9898', '7b9dc501afe4ee11c56a4831e20cee71', '2021-03-04 07:25:05', '2021-03-04 07:25:05', NULL, '116.25.45.103', '', 'seata-dev', NULL, NULL, NULL, NULL, NULL);
INSERT INTO `config_info` VALUES (326, 'cloud-config.properties', 'DEFAULT_GROUP', '####################################################################################################\n################################################## 服务器地址 ########################################\n####################################################################################################\nservice.client.ipAddress=192.168.137.200\n####################################################################################################\n################################################## 注册中心 - nacose ###############################\n####################################################################################################\n# 命名空间\nconfig.register.namespace=${spring.cloud.nacos.config.namespace}\n# 注册中心地址\nconfig.register.serverAddr=http://${spring.cloud.nacos.config.server-addr}\n####################################################################################################\n################################################## learn-cloud-gateway ################################\n####################################################################################################\n# 移动 /usr/app/app\n# pc /usr/app/web\nconfig.gateway.static.locations=file:/usr/local/app\n#config.zuul.static.locations=file:///D:/usr/app', 'd10c790c2550336669c40a96d9875832', '2021-03-12 07:25:07', '2021-03-12 07:28:13', NULL, '192.168.137.1', '', 'pro', '', '', '', 'properties', '');
INSERT INTO `config_info` VALUES (327, 'sys-config-db.properties', 'DEFAULT_GROUP', 'db.service.ipAddress=192.168.137.200\n####################################################################################################\n############################################### hikari 数据源配置 ################\n####################################################################################################\n# jdbc_config  datasource\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\nspring.datasource.url=jdbc:mysql://${db.service.ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\nspring.datasource.username=learn_shop\nspring.datasource.password=pass123\n# Hikari will use the above plus the following to setup connection pooling\nspring.datasource.type=com.zaxxer.hikari.HikariDataSource\n# 最小空闲数\nspring.datasource.hikari.minimum-idle=5\n# 链接池最大数量\nspring.datasource.hikari.maximum-pool-size=15\nspring.datasource.hikari.auto-commit=true\nspring.datasource.hikari.idle-timeout=30000\nspring.datasource.hikari.pool-name=DatebookHikariCP\n# 配置为0则是永久不过期\nspring.datasource.hikari.max-lifetime=0\nspring.datasource.hikari.connection-timeout=30000\nspring.datasource.hikari.connection-test-query=SELECT 1\n', 'e1e957eceea95eec2239e9e3d112627e', '2021-03-12 07:25:07', '2021-08-24 12:23:19', NULL, '192.168.137.1', '', 'pro', '', '', '', 'properties', '');
INSERT INTO `config_info` VALUES (328, 'sys-config-mq.properties', 'DEFAULT_GROUP', 'mq.service.ipAddress=192.168.137.200\n####################################################################################################\n################################################## mq配置 ###########################################\n####################################################################################################\n#mq的类型\nconfig.mq.type=rabbit\n#mq服务器地址\nconfig.mq.host=${mq.service.ipAddress}\n#mq用户名和密码\nconfig.mq.username=admin\nconfig.mq.password=admin123\n#mq服务器端口\nconfig.mq.port=5672\n#虚拟主机\nconfig.mq.virtual-host=/learn-default\n\n# 日志收集\nconfig.mq.exchange.logCollect=logCollectExchange\nconfig.mq.queue.logCollect=logCollectQueue\nconfig.mq.routeKey.logCollect=logCollectRouteKey\n\n# zuul 向 system 系统发出执行 sql 请求\nconfig.mq.exchange.executeSql=executeSqlExchange\nconfig.mq.queue.executeSql=executeSqlQueue\nconfig.mq.routeKey.executeSql=executeSqlRouteKey\n\n# job 发送自动任务执行请求\nconfig.mq.exchange.runJobTest=runJobExchange\n#测试用\nconfig.mq.queue.runJobTest=runJobTestQueue\nconfig.mq.routeKey.runJobTest=runJobTestRouteKey\n\n# 商品系统\nconfig.mq.exchange.product=productExchange\n# product 发送刷新es缓存请求\nconfig.mq.queue.refreshEs=refreshEsQueue\nconfig.mq.routeKey.refreshEs=refreshEsRouteKey\n\n# 秒杀订单交换机\nconfig.mq.exchange.secKillOrder=secKillOrderExchange\n# 秒杀订单交换机（死信）\nconfig.mq.exchange.secKillOrderDlx=secKillOrderExchangeDlx\n# 秒杀成功后发送订单到order\nconfig.mq.queue.secKillToCoreOrder=secKillToCoreOrderQueue\n# 秒杀成功后发送订单到order（死信）\nconfig.mq.queue.secKillToCoreOrderDlx=secKillToCoreOrderQueueDlx\n# 秒杀成功后发送订单到system\nconfig.mq.queue.secKillToAdminSystem=secKillToAdminSystemQueue\n\n# job 向 system 系统发出发送邮件请求\nconfig.mq.exchange.sendMail=sendMailExchange\n\nconfig.mq.queue.sendMail=sendmailQueue\nconfig.mq.routeKey.sendMail=sendmailRouteKey\n\nconfig.mq.queue.sendMailDlx=sendmailQueueDlx\nconfig.mq.routeKey.sendMailDlx=sendmailRouteKeyDlx\n\nconfig.mq.queue.sendMailTrt=sendmailQueueTrt\nconfig.mq.routeKey.sendMailTrt=sendmailRouteKeyTrt\n\n#测试用\nconfig.mq.ts.test=ts-test', '1503fcf69627121ea72fcf42fefbdc19', '2021-03-12 07:25:07', '2021-08-24 11:41:46', NULL, '192.168.137.1', '', 'pro', '', '', '', 'properties', '');
INSERT INTO `config_info` VALUES (329, 'sys-config-redis.properties', 'DEFAULT_GROUP', 'redis.service.ipAddress=192.168.137.200\n####################################################################################################\n################################################## redis配置 ###########################################\n####################################################################################################\n#redis 配置文件，根据情况选择集群或者单机模式\n##redis 集群环境配置\n##redis cluster\n#spring.redis.cluster.nodes=127.0.0.1:7001,127.0.0.1:7002,127.0.0.1:7003\n#spring.redis.cluster.commandTimeout=5000\n##redis 单点环境配置\n#redis\n#redis主机地址\nspring.redis.host=${redis.service.ipAddress}\n#redis主机端口\nspring.redis.port=6399\n#redis链接密码\nspring.redis.password=require@@pass##$$1234%%4321\nspring.redis.timeout=10000ms\n\n#Lettuce 是一个可伸缩线程安全的 Redis 客户端，多个线程可以共享同一个 RedisConnection，它利用优秀 netty NIO 框架来高效地管理多个连接\n# 连接池最大连接数（使用负值表示没有限制）\nspring.redis.lettuce.pool.max-active=30\n# 连接池最大阻塞等待时间（使用负值表示没有限制）\nspring.redis.lettuce.pool.max-wait=-1\n# 连接池中的最大空闲连接\nspring.redis.lettuce.pool.max-idle=8\n# 连接池中的最小空闲连接\nspring.redis.lettuce.pool.min-idle=0\n# 关闭超时时间\nspring.redis.lettuce.shutdown-timeout=100\n#mybatis缓存的数据库，默认为第15个\n#spring.redis.cacheDatabase=15\n#mybatis缓存过期时间（单位：分钟），默认：30\n#spring.redis.cacheExpire=30\n\n# redisson链接配置\n#当前处理核数量 * 2\nspring.redisson.thread=4\n#最小空闲连接数,默认值:10,最小保持连接数（长连接）\nspring.redisson.connectionMinimumIdleSize=12\n#连接空闲超时，单位：毫秒 默认10000;当前连接池里的连接数量超过了最小空闲连接数，\n#而连接空闲时间超过了该数值，这些连接将会自动被关闭，并从连接池里去掉\nspring.redisson.idleConnectionTimeout=10000\n#连接等待超时,单位：毫秒,默认10000\nspring.redisson.connectTimeout=10000\n#命令等待超时,单位：毫秒,默认3000；等待节点回复命令的时间。该时间从命令发送成功时开始计时\nspring.redisson.timeout=3000\n#命令失败重试次数，默认值:3\nspring.redisson.retryAttempts=2\n#命令重试发送时间间隔，单位：毫秒,默认值:1500\nspring.redisson.retryInterval=1500\n#单个连接最大订阅数量，默认值：5\nspring.redisson.subscriptionsPerConnection=5\n#客户端名称\n#spring.redisson.clientName=\n#发布和订阅连接的最小空闲连接数，默认值：1；Redisson内部经常通过发布和订阅来实现许多功能。\n#长期保持一定数量的发布订阅连接是必须的\nspring.redisson.subscriptionConnectionMinimumIdleSize=1\n#发布和订阅连接池大小，默认值：50\nspring.redisson.subscriptionConnectionPoolSize=50\n#连接池最大容量。默认值：64；连接池的连接数量自动弹性伸缩\nspring.redisson.connectionPoolSize=64\n#数据库编号，默认值：0\nspring.redisson.database=14\n#DNS监测时间间隔，单位：毫秒，默认值：5000\nspring.redisson.dnsMonitoringInterval=5000 ', 'e8fd99008d5c929449118751a2f66e1d', '2021-03-12 07:25:07', '2021-03-12 07:29:29', NULL, '192.168.137.1', '', 'pro', '', '', '', 'properties', '');
INSERT INTO `config_info` VALUES (330, 'learn-shop-admin-system.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n  rabbitmq:\n    host: ${config.mq.host} #rabbitMQ服务器地址\n    port: ${config.mq.port}  #rabbitMQ服务器端口\n    username: ${config.mq.username}\n    password: ${config.mq.password}\n    virtual-host: ${config.mq.virtual-host}\n\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器', 'cd2514d43aacb624f10c91874ce6dc99', '2021-03-12 07:25:07', '2021-03-12 07:25:07', NULL, '192.168.137.1', '', 'pro', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (331, 'learn-shop-admin-user.yml', 'DEFAULT_GROUP', 'feign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: true #Hystrix 是否启用超时时间\n        isolation:\n          thread:\n            timeoutInMilliseconds: 8000 #Hystrix断路器的超时时间，默认是1s，断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试\n          strategy: SEMAPHORE\nspring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n  rabbitmq:\n    host: ${config.mq.host} #rabbitMQ服务器地址\n    port: ${config.mq.port}  #rabbitMQ服务器端口\n    username: ${config.mq.username}\n    password: ${config.mq.password}\n    virtual-host: ${config.mq.virtual-host}\n\n#测试\nwords: ${server.port}', 'df164483cf2f5cd13757be056ae0d845', '2021-03-12 07:25:07', '2021-03-12 07:25:07', NULL, '192.168.137.1', '', 'pro', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (332, 'learn-shop-core-order.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n    loadbalancer:\n      retry:\n        enabled: true #开启重试机制\n  rabbitmq:\n    host: ${config.mq.host} #rabbitMQ服务器地址\n    port: ${config.mq.port}  #rabbitMQ服务器端口\n    username: ${config.mq.username}\n    password: ${config.mq.password}\n    virtual-host: ${config.mq.virtual-host}\n    # 配置消息重试\n    listener:\n      simple:\n        acknowledge-mode: auto  # 自动ack\n        retry:\n          enabled: true\n          max-attempts: 1\n          initial-interval: 1000  # 重试初始间隔时间\n          multiplier: 2 # 间隔时间乘子，间隔时间*乘子=下一次的间隔时间，最大不能超过设置的最大间隔时间\n          max-interval: 10000   # 重试最大间隔时间\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: true #Hystrix 是否启用超时时间\n        isolation:\n          thread:\n            timeoutInMilliseconds: 8000 #Hystrix断路器的超时时间，默认是1s，断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试\n          strategy: SEMAPHORE\n\nribbon:\n  ConnectTimeout: 1000 #ribbon请求连接的超时时间\n  ReadTimeout: 3000 #请求处理的超时时间\n  OkToRetryOnAllOperations: true #对所有请求操作都进行重试\n  MaxAutoRetries: 0 #对当前服务的重试次数（第一次分配给9082的时候，如果404，则再重试MaxAutoRetries次，如果还是404，则切换到其他服务MaxAutoRetriesNextServer决定）\n  MaxAutoRetriesNextServer: 5 #切换服务的次数(比如本次请求分配给9082处理，发现404，则切换分配给9081处理，如果还是404，则返回404给客户端）', 'cc614108c557ad084ac371b3376f870c', '2021-03-12 07:25:07', '2021-08-24 11:25:50', NULL, '192.168.137.1', '', 'pro', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (333, 'learn-shop-core-product.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n\n\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器', '4052b4e480d59fe817b3290eca5a89aa', '2021-03-12 07:25:07', '2021-03-12 07:25:07', NULL, '192.168.137.1', '', 'pro', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (334, 'learn-shop-public-auth.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n  rabbitmq:\n    host: ${config.mq.host} #rabbitMQ服务器地址\n    port: ${config.mq.port}  #rabbitMQ服务器端口\n    username: ${config.mq.username}\n    password: ${config.mq.password}\n    virtual-host: ${config.mq.virtual-host}\n\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器\n\n#测试\nwords: 11111', '761ff8f4e3addcd1eefb5cb929d4aa33', '2021-03-12 07:25:07', '2021-03-12 07:25:07', NULL, '192.168.137.1', '', 'pro', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (335, 'learn-shop-public-job.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 8011\r\n\r\nspring:\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        namespace: ${config.register.namespace} # 命名空间\r\n        server-addr: ${config.register.serverAddr} # 配置注册中心\r\n  rabbitmq:\r\n    host: ${config.mq.host} #rabbitMQ服务器地址\r\n    port: ${config.mq.port}  #rabbitMQ服务器端口\r\n    username: ${config.mq.username}\r\n    password: ${config.mq.password}\r\n    virtual-host: ${config.mq.virtual-host}\r\n\r\nfeign: #远程连接\r\n  hystrix: #熔断器配置\r\n    enabled: true #启动熔断器', 'dd9e9bc9a249b0eb3af17755ca047a33', '2021-03-12 07:25:07', '2021-03-12 07:25:07', NULL, '192.168.137.1', '', 'pro', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (336, 'learn-shop-core-search.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器', '77fad7d59cf3523a4e27f2e84c540099', '2021-03-12 07:25:07', '2021-03-12 07:25:07', NULL, '192.168.137.1', '', 'pro', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (337, 'learn-shop-core-seckill.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n  rabbitmq:\n    host: ${config.mq.host} #rabbitMQ服务器地址\n    port: ${config.mq.port}  #rabbitMQ服务器端口\n    username: ${config.mq.username}\n    password: ${config.mq.password}\n    virtual-host: ${config.mq.virtual-host}\n    # 配置消息重试\n    listener:\n      simple:\n        acknowledge-mode: auto  # 自动ack\n        retry:\n          enabled: true\n          max-attempts: 5\n          initial-interval: 1000  # 重试初始间隔时间\n          multiplier: 2 # 间隔时间乘子，间隔时间*乘子=下一次的间隔时间，最大不能超过设置的最大间隔时间\n          max-interval: 10000   # 重试最大间隔时间\n\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器\n\n\nseckill:\n  gen-salt: wq<<.((0kkoe$$% # 设置盐值字符串，随便定义，用于混淆MD5值\n  load-data-start-before: 10 # 自动任务加载秒杀开始前多少分钟的数据加到缓存中（单位：分钟）\n  clear-data-end-arfer: 30 # 设置 redis 中秒杀活动结束后多少分钟数据过期（单位：分钟）\n  order-exp: 30 # 订单过期时间（单位：分钟）', '519342b90b3b601e8b97e9aad7f34f9b', '2021-03-12 07:25:07', '2021-08-24 11:13:44', NULL, '192.168.137.1', '', 'pro', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (338, 'cloud-config.properties', 'DEFAULT_GROUP', '####################################################################################################\n################################################## 服务器地址 ########################################\n####################################################################################################\nservice.client.ipAddress=127.0.0.1\n####################################################################################################\n################################################## 注册中心 - nacose ###############################\n####################################################################################################\n# 命名空间\nconfig.register.namespace=${spring.cloud.nacos.config.namespace}\n# 注册中心地址\nconfig.register.serverAddr=http://${spring.cloud.nacos.config.server-addr}\n####################################################################################################\n################################################## learn-cloud-gateway ################################\n####################################################################################################\n# 移动 /usr/app/app\n# pc /usr/app/web\nconfig.gateway.static.locations=file:///D:/GitHub/learn/learn-shop-ui-admin/dist\n#config.gateway.static.locations=file:///D:/usr/app\n', '258faee275633d3b9698845b6ae65dd0', '2021-03-12 07:25:26', '2021-03-12 07:25:26', NULL, '192.168.137.1', '', 'dev', NULL, NULL, NULL, 'properties', NULL);
INSERT INTO `config_info` VALUES (339, 'sys-config-db.properties', 'DEFAULT_GROUP', 'db.service.ipAddress=localhost\n####################################################################################################\n############################################### hikari 数据源配置 #####################################\n####################################################################################################\n# jdbc_config  datasource\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\nspring.datasource.url=jdbc:mysql://${db.service.ipAddress}:3308/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\nspring.datasource.username=learn_shop\nspring.datasource.password=pass123\n# Hikari will use the above plus the following to setup connection pooling\nspring.datasource.type=com.zaxxer.hikari.HikariDataSource\n# 最小空闲数\nspring.datasource.hikari.minimum-idle=5\n# 链接池最大数量\nspring.datasource.hikari.maximum-pool-size=15\nspring.datasource.hikari.auto-commit=true\nspring.datasource.hikari.idle-timeout=30000\nspring.datasource.hikari.pool-name=DatebookHikariCP\n# 配置为0则是永久不过期\nspring.datasource.hikari.max-lifetime=0\nspring.datasource.hikari.connection-timeout=30000\nspring.datasource.hikari.connection-test-query=SELECT 1\n', 'bf5922103f147b35c77cf6b6f522d1b5', '2021-03-12 07:25:26', '2021-03-12 07:25:26', NULL, '192.168.137.1', '', 'dev', NULL, NULL, NULL, 'properties', NULL);
INSERT INTO `config_info` VALUES (340, 'sys-config-mq.properties', 'DEFAULT_GROUP', 'mq.service.ipAddress=127.0.0.1\n####################################################################################################\n################################################## mq配置 ###########################################\n####################################################################################################\n#mq的类型\nconfig.mq.type=rabbit\n#mq服务器地址\nconfig.mq.host=${mq.service.ipAddress}\n#mq用户名和密码\nconfig.mq.username=admin\nconfig.mq.password=admin123\n#mq服务器端口\nconfig.mq.port=5672\n#虚拟主机\nconfig.mq.virtual-host=/learn-default\n\n# 日志收集\nconfig.mq.exchange.logCollect=logCollectExchange\nconfig.mq.queue.logCollect=logCollectQueue\nconfig.mq.routeKey.logCollect=logCollectRouteKey\n\n# zuul 向 system 系统发出执行 sql 请求\nconfig.mq.exchange.executeSql=executeSqlExchange\nconfig.mq.queue.executeSql=executeSqlQueue\nconfig.mq.routeKey.executeSql=executeSqlRouteKey\n\n# job 发送自动任务执行请求\nconfig.mq.exchange.runJobTest=runJobExchange\n#测试用\nconfig.mq.queue.runJobTest=runJobTestQueue\nconfig.mq.routeKey.runJobTest=runJobTestRouteKey\n\n# 商品系统\nconfig.mq.exchange.product=productExchange\n# product 发送刷新es缓存请求\nconfig.mq.queue.refreshEs=refreshEsQueue\nconfig.mq.routeKey.refreshEs=refreshEsRouteKey\n\n# 秒杀订单交换机\nconfig.mq.exchange.secKillOrder=secKillOrderExchange\n# 秒杀订单交换机（死信）\nconfig.mq.exchange.secKillOrderDlx=secKillOrderExchangeDlx\n# 秒杀成功后发送订单到order\nconfig.mq.queue.secKillToCoreOrder=secKillToCoreOrderQueue\n# 秒杀成功后发送订单到order（死信）\nconfig.mq.queue.secKillToCoreOrderDlx=secKillToCoreOrderQueueDlx\n# 秒杀成功后发送订单到system\nconfig.mq.queue.secKillToAdminSystem=secKillToAdminSystemQueue\n\n# job 向 system 系统发出发送邮件请求\nconfig.mq.exchange.sendMail=sendMailExchange\n\nconfig.mq.queue.sendMail=sendmailQueue\nconfig.mq.routeKey.sendMail=sendmailRouteKey\n\nconfig.mq.queue.sendMailDlx=sendmailQueueDlx\nconfig.mq.routeKey.sendMailDlx=sendmailRouteKeyDlx\n\nconfig.mq.queue.sendMailTrt=sendmailQueueTrt\nconfig.mq.routeKey.sendMailTrt=sendmailRouteKeyTrt\n\n#测试用\nconfig.mq.ts.test=ts-test', 'a370a59409aef01692ca40e8caf2e22d', '2021-03-12 07:25:26', '2021-08-24 11:41:28', NULL, '192.168.137.1', '', 'dev', '', '', '', 'properties', '');
INSERT INTO `config_info` VALUES (341, 'sys-config-redis.properties', 'DEFAULT_GROUP', 'redis.service.ipAddress=127.0.0.1\n####################################################################################################\n################################################## redis配置 ###########################################\n####################################################################################################\n#redis 配置文件，根据情况选择集群或者单机模式\n##redis 集群环境配置\n##redis cluster\n#spring.redis.cluster.nodes=127.0.0.1:7001,127.0.0.1:7002,127.0.0.1:7003\n#spring.redis.cluster.commandTimeout=5000\n##redis 单点环境配置\n#redis\n#redis主机地址\nspring.redis.host=${redis.service.ipAddress}\n#redis主机端口\nspring.redis.port=6379\n#redis链接密码\nspring.redis.password=\nspring.redis.timeout=10000ms\n\n#Lettuce 是一个可伸缩线程安全的 Redis 客户端，多个线程可以共享同一个 RedisConnection，它利用优秀 netty NIO 框架来高效地管理多个连接\n# 连接池最大连接数（使用负值表示没有限制）\nspring.redis.lettuce.pool.max-active=30\n# 连接池最大阻塞等待时间（使用负值表示没有限制）\nspring.redis.lettuce.pool.max-wait=-1\n# 连接池中的最大空闲连接\nspring.redis.lettuce.pool.max-idle=8\n# 连接池中的最小空闲连接\nspring.redis.lettuce.pool.min-idle=0\n# 关闭超时时间\nspring.redis.lettuce.shutdown-timeout=100\n#mybatis缓存的数据库，默认：第15个\n#spring.redis.cacheDatabase=15\n#mybatis缓存过期时间（单位：分钟），默认：30\n#spring.redis.cacheExpire=30\n\n# redisson链接配置\n#当前处理核数量 * 2\nspring.redisson.thread=4\n#最小空闲连接数,默认值:10,最小保持连接数（长连接）\nspring.redisson.connectionMinimumIdleSize=12\n#连接空闲超时，单位：毫秒 默认10000;当前连接池里的连接数量超过了最小空闲连接数，\n#而连接空闲时间超过了该数值，这些连接将会自动被关闭，并从连接池里去掉\nspring.redisson.idleConnectionTimeout=10000\n#连接等待超时,单位：毫秒,默认10000\nspring.redisson.connectTimeout=10000\n#命令等待超时,单位：毫秒,默认3000；等待节点回复命令的时间。该时间从命令发送成功时开始计时\nspring.redisson.timeout=3000\n#命令失败重试次数，默认值:3\nspring.redisson.retryAttempts=2\n#命令重试发送时间间隔，单位：毫秒,默认值:1500\nspring.redisson.retryInterval=1500\n#单个连接最大订阅数量，默认值：5\nspring.redisson.subscriptionsPerConnection=5\n#客户端名称\n#spring.redisson.clientName=\n#发布和订阅连接的最小空闲连接数，默认值：1；Redisson内部经常通过发布和订阅来实现许多功能。\n#长期保持一定数量的发布订阅连接是必须的\nspring.redisson.subscriptionConnectionMinimumIdleSize=1\n#发布和订阅连接池大小，默认值：50\nspring.redisson.subscriptionConnectionPoolSize=50\n#连接池最大容量。默认值：64；连接池的连接数量自动弹性伸缩\nspring.redisson.connectionPoolSize=64\n#数据库编号，默认值：0\nspring.redisson.database=14\n#DNS监测时间间隔，单位：毫秒，默认值：5000\nspring.redisson.dnsMonitoringInterval=5000 ', '6b275219932c5d6f38038a546e0c1568', '2021-03-12 07:25:26', '2021-03-12 07:25:26', NULL, '192.168.137.1', '', 'dev', NULL, NULL, NULL, 'properties', NULL);
INSERT INTO `config_info` VALUES (342, 'learn-shop-admin-user.yml', 'DEFAULT_GROUP', 'feign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: true #Hystrix 是否启用超时时间\n        isolation:\n          thread:\n            timeoutInMilliseconds: 8000 #Hystrix断路器的超时时间，默认是1s，断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试\n          strategy: SEMAPHORE\nspring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n  rabbitmq:\n    host: ${config.mq.host} #rabbitMQ服务器地址\n    port: ${config.mq.port}  #rabbitMQ服务器端口\n    username: ${config.mq.username}\n    password: ${config.mq.password}\n    virtual-host: ${config.mq.virtual-host}\n\n#测试\nwords: ${server.port}', 'df164483cf2f5cd13757be056ae0d845', '2021-03-12 07:25:26', '2021-03-12 07:25:26', NULL, '192.168.137.1', '', 'dev', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (343, 'learn-shop-admin-system.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n  rabbitmq:\n    host: ${config.mq.host} #rabbitMQ服务器地址\n    port: ${config.mq.port}  #rabbitMQ服务器端口\n    username: ${config.mq.username}\n    password: ${config.mq.password}\n    virtual-host: ${config.mq.virtual-host}\n\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器\n\n#测试\nwords: 11111', '761ff8f4e3addcd1eefb5cb929d4aa33', '2021-03-12 07:25:26', '2021-03-12 07:25:26', NULL, '192.168.137.1', '', 'dev', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (344, 'learn-shop-core-order.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n    loadbalancer:\n      retry:\n        enabled: true #开启重试机制\n  rabbitmq:\n    host: ${config.mq.host} #rabbitMQ服务器地址\n    port: ${config.mq.port}  #rabbitMQ服务器端口\n    username: ${config.mq.username}\n    password: ${config.mq.password}\n    virtual-host: ${config.mq.virtual-host}\n    # 配置消息重试\n    listener:\n      simple:\n        acknowledge-mode: auto  # 自动ack\n        retry:\n          enabled: true\n          max-attempts: 1\n          initial-interval: 1000  # 重试初始间隔时间\n          multiplier: 2 # 间隔时间乘子，间隔时间*乘子=下一次的间隔时间，最大不能超过设置的最大间隔时间\n          max-interval: 10000   # 重试最大间隔时间\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: true #Hystrix 是否启用超时时间\n        isolation:\n          thread:\n            timeoutInMilliseconds: 8000 #Hystrix断路器的超时时间，默认是1s，断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试\n          strategy: SEMAPHORE\n\nribbon:\n  ConnectTimeout: 1000 #ribbon请求连接的超时时间\n  ReadTimeout: 3000 #请求处理的超时时间\n  OkToRetryOnAllOperations: true #对所有请求操作都进行重试\n  MaxAutoRetries: 0 #对当前服务的重试次数（第一次分配给9082的时候，如果404，则再重试MaxAutoRetries次，如果还是404，则切换到其他服务MaxAutoRetriesNextServer决定）\n  MaxAutoRetriesNextServer: 5 #切换服务的次数(比如本次请求分配给9082处理，发现404，则切换分配给9081处理，如果还是404，则返回404给客户端）', 'cc614108c557ad084ac371b3376f870c', '2021-03-12 07:25:26', '2021-08-24 11:26:09', NULL, '192.168.137.1', '', 'dev', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (345, 'learn-shop-core-product.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n\n\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器', '4052b4e480d59fe817b3290eca5a89aa', '2021-03-12 07:25:26', '2021-03-12 07:25:26', NULL, '192.168.137.1', '', 'dev', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (346, 'learn-shop-public-auth.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n  rabbitmq:\n    host: ${config.mq.host} #rabbitMQ服务器地址\n    port: ${config.mq.port}  #rabbitMQ服务器端口\n    username: ${config.mq.username}\n    password: ${config.mq.password}\n    virtual-host: ${config.mq.virtual-host}\n\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器\n\n#测试\nwords: 11111', '761ff8f4e3addcd1eefb5cb929d4aa33', '2021-03-12 07:25:26', '2021-03-12 07:25:26', NULL, '192.168.137.1', '', 'dev', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (347, 'learn-shop-public-job.yml', 'DEFAULT_GROUP', 'server:\r\n  port: 8011\r\n\r\nspring:\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        namespace: ${config.register.namespace} # 命名空间\r\n        server-addr: ${config.register.serverAddr} # 配置注册中心\r\n  rabbitmq:\r\n    host: ${config.mq.host} #rabbitMQ服务器地址\r\n    port: ${config.mq.port}  #rabbitMQ服务器端口\r\n    username: ${config.mq.username}\r\n    password: ${config.mq.password}\r\n    virtual-host: ${config.mq.virtual-host}\r\n\r\nfeign: #远程连接\r\n  hystrix: #熔断器配置\r\n    enabled: true #启动熔断器', 'dd9e9bc9a249b0eb3af17755ca047a33', '2021-03-12 07:25:26', '2021-03-12 07:25:26', NULL, '192.168.137.1', '', 'dev', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (348, 'learn-shop-core-search.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器        ', 'a7b6b5e77075300b4ea253d2d53a04e4', '2021-03-12 07:25:26', '2021-03-12 07:25:26', NULL, '192.168.137.1', '', 'dev', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (349, 'learn-shop-core-seckill.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n\n\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器\n\n\nseckill:\n  gen-salt: wq<<.((0kkoe$$% # 设置盐值字符串，随便定义，用于混淆MD5值\n  load-data-start-before: 10 # 自动任务加载秒杀开始前多少分钟的数据加到缓存中（单位：分钟）\n  clear-data-end-arfer: 30 # 设置 redis 中秒杀活动结束后多少分钟数据过期（单位：分钟）\n  order-exp: 30 # 订单过期时间（单位：分钟）', 'bc6d0c12d9cfcbaf92da1b027f470bc3', '2021-03-12 07:25:26', '2021-03-12 07:25:26', NULL, '192.168.137.1', '', 'dev', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (357, 'sys-config-db.yml', 'DEFAULT_GROUP', 'db.service.ipAddress: 192.168.137.200\n####################################################################################################\n############################################ 主从分离 sharding-jdbc hikari 数据源配置 ################\n####################################################################################################\nspring:\n  shardingsphere:\n    datasource:\n      names: master,slave1,slave2\n      master: # 主数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop\n        password: pass123\n      slave1: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36006/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop_r\n        password: pass123\n      slave2: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36007/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop_r\n        password: pass123\n    masterslave:\n      load-balance-algorithm-type: round_robin\n      name: dataSource\n      master-data-source-name: master\n      slave-data-source-names: slave1,slave2\n    props:\n      sql: true # 显示SQL', 'd822cfd2bc20028d834b9ebdfdfbcd39', '2021-08-24 11:07:42', '2021-08-24 12:51:56', NULL, '192.168.137.1', '', 'pro', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (358, 'sys-config-db.yml', 'DEFAULT_GROUP', 'ipAddress: 127.0.0.1\n####################################################################################################\n############################################ 主从分离 sharding-jdbc hikari 数据源配置 ################\n####################################################################################################\nspring:\n  shardingsphere:\n    datasource:\n      names: master,slave1,slave2\n      master: # 主数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\n        username: learn_shop\n        password: pass123\n      slave1: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36006/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\n        username: learn_shop_r\n        password: pass123\n      slave2: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36007/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\n        username: learn_shop_r\n        password: pass123\n    masterslave:\n      load-balance-algorithm-type: round_robin\n      name: dataSource\n      master-data-source-name: master\n      slave-data-source-names: slave1,slave2\n    props:\n      sql: true # 显示SQL', '36916e85bed4b2afa5f3ee4861296b52', '2021-08-24 11:08:25', '2021-08-24 11:22:00', NULL, '192.168.137.1', '', 'dev', '', '', '', 'yaml', '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime(0) NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint UNSIGNED NOT NULL,
  `nid` bigint UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0),
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0),
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 418 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (0, 412, 'sys-config-db.yml', 'DEFAULT_GROUP', '', 'ipAddress: 192.168.137.200\r\n####################################################################################################\r\n############################################ 主从分离 sharding-jdbc hikari 数据源配置 ################\r\n####################################################################################################\r\nspring:\r\n  shardingsphere:\r\n    datasource:\r\n      names: master,slave1,slave2\r\n      master: # 主数据源\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class: com.mysql.cj.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://${ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n        username: learn_shop\r\n        password: pass123\r\n      slave1: # 从数据源\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class: com.mysql.cj.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://${ipAddress}:36006/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n        username: learn_shop_r\r\n        password: pass123\r\n      slave2: # 从数据源\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class: com.mysql.cj.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://${ipAddress}:36007/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n        username: learn_shop_r\r\n        password: pass123\r\n    masterslave:\r\n      load-balance-algorithm-type: round_robin\r\n      name: dataSource\r\n      master-data-source-name: master\r\n      slave-data-source-names: slave1,slave2\r\n    props:\r\n      sql: true # 显示SQL', '9fc97a3d73eff621d2f02b02a8a8b398', '2021-08-24 19:07:42', '2021-08-24 11:07:42', NULL, '192.168.137.1', 'I', 'pro');
INSERT INTO `his_config_info` VALUES (0, 413, 'sys-config-db.yml', 'DEFAULT_GROUP', '', 'ipAddress: 127.0.0.1\r\n####################################################################################################\r\n############################################ 主从分离 sharding-jdbc hikari 数据源配置 ################\r\n####################################################################################################\r\nspring:\r\n  shardingsphere:\r\n    datasource:\r\n      names: master,slave1,slave2\r\n      master: # 主数据源\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class: com.mysql.cj.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://${ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n        username: learn_shop\r\n        password: pass123\r\n      slave1: # 从数据源\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class: com.mysql.cj.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://${ipAddress}:36006/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n        username: learn_shop_r\r\n        password: pass123\r\n      slave2: # 从数据源\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class: com.mysql.cj.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://${ipAddress}:36007/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n        username: learn_shop_r\r\n        password: pass123\r\n    masterslave:\r\n      load-balance-algorithm-type: round_robin\r\n      name: dataSource\r\n      master-data-source-name: master\r\n      slave-data-source-names: slave1,slave2\r\n    props:\r\n      sql: true # 显示SQL', '2d965e026d6d04fc0943332b60f8d971', '2021-08-24 19:08:25', '2021-08-24 11:08:25', NULL, '192.168.137.1', 'I', 'dev');
INSERT INTO `his_config_info` VALUES (337, 414, 'learn-shop-core-seckill.yml', 'DEFAULT_GROUP', '', 'spring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n\n\nfeign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器\n\n\nseckill:\n  gen-salt: wq<<.((0kkoe$$% # 设置盐值字符串，随便定义，用于混淆MD5值\n  load-data-start-before: 10 # 自动任务加载秒杀开始前多少分钟的数据加到缓存中（单位：分钟）\n  clear-data-end-arfer: 30 # 设置 redis 中秒杀活动结束后多少分钟数据过期（单位：分钟）\n  order-exp: 30 # 订单过期时间（单位：分钟）', 'bc6d0c12d9cfcbaf92da1b027f470bc3', '2021-08-24 19:13:46', '2021-08-24 11:13:44', NULL, '192.168.137.1', 'U', 'pro');
INSERT INTO `his_config_info` VALUES (357, 415, 'sys-config-db.yml', 'DEFAULT_GROUP', '', 'ipAddress: 192.168.137.200\r\n####################################################################################################\r\n############################################ 主从分离 sharding-jdbc hikari 数据源配置 ################\r\n####################################################################################################\r\nspring:\r\n  shardingsphere:\r\n    datasource:\r\n      names: master,slave1,slave2\r\n      master: # 主数据源\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class: com.mysql.cj.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://${ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n        username: learn_shop\r\n        password: pass123\r\n      slave1: # 从数据源\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class: com.mysql.cj.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://${ipAddress}:36006/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n        username: learn_shop_r\r\n        password: pass123\r\n      slave2: # 从数据源\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class: com.mysql.cj.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://${ipAddress}:36007/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n        username: learn_shop_r\r\n        password: pass123\r\n    masterslave:\r\n      load-balance-algorithm-type: round_robin\r\n      name: dataSource\r\n      master-data-source-name: master\r\n      slave-data-source-names: slave1,slave2\r\n    props:\r\n      sql: true # 显示SQL', '9fc97a3d73eff621d2f02b02a8a8b398', '2021-08-24 19:17:12', '2021-08-24 11:17:13', NULL, '192.168.137.1', 'U', 'pro');
INSERT INTO `his_config_info` VALUES (358, 416, 'sys-config-db.yml', 'DEFAULT_GROUP', '', 'ipAddress: 127.0.0.1\r\n####################################################################################################\r\n############################################ 主从分离 sharding-jdbc hikari 数据源配置 ################\r\n####################################################################################################\r\nspring:\r\n  shardingsphere:\r\n    datasource:\r\n      names: master,slave1,slave2\r\n      master: # 主数据源\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class: com.mysql.cj.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://${ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n        username: learn_shop\r\n        password: pass123\r\n      slave1: # 从数据源\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class: com.mysql.cj.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://${ipAddress}:36006/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n        username: learn_shop_r\r\n        password: pass123\r\n      slave2: # 从数据源\r\n        type: com.zaxxer.hikari.HikariDataSource\r\n        driver-class: com.mysql.cj.jdbc.Driver\r\n        jdbc-url: jdbc:mysql://${ipAddress}:36007/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n        username: learn_shop_r\r\n        password: pass123\r\n    masterslave:\r\n      load-balance-algorithm-type: round_robin\r\n      name: dataSource\r\n      master-data-source-name: master\r\n      slave-data-source-names: slave1,slave2\r\n    props:\r\n      sql: true # 显示SQL', '2d965e026d6d04fc0943332b60f8d971', '2021-08-24 19:21:59', '2021-08-24 11:22:00', NULL, '192.168.137.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (357, 417, 'sys-config-db.yml', 'DEFAULT_GROUP', '', 'db.ipAddress: 192.168.137.200\n####################################################################################################\n############################################ 主从分离 sharding-jdbc hikari 数据源配置 ################\n####################################################################################################\nspring:\n  shardingsphere:\n    datasource:\n      names: master,slave1,slave2\n      master: # 主数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\n        username: learn_shop\n        password: pass123\n      slave1: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.ipAddress}:36006/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\n        username: learn_shop_r\n        password: pass123\n      slave2: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.ipAddress}:36007/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\n        username: learn_shop_r\n        password: pass123\n    masterslave:\n      load-balance-algorithm-type: round_robin\n      name: dataSource\n      master-data-source-name: master\n      slave-data-source-names: slave1,slave2\n    props:\n      sql: true # 显示SQL', '6a712c625e5a864e07682f39ee769ce4', '2021-08-24 19:22:31', '2021-08-24 11:22:31', NULL, '192.168.137.1', 'U', 'pro');
INSERT INTO `his_config_info` VALUES (332, 418, 'learn-shop-core-order.yml', 'DEFAULT_GROUP', '', 'feign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: true #Hystrix 是否启用超时时间\n        isolation:\n          thread:\n            timeoutInMilliseconds: 8000 #Hystrix断路器的超时时间，默认是1s，断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试\n          strategy: SEMAPHORE\nspring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n    loadbalancer:\n      retry:\n        enabled: true #开启重试机制\n  rabbitmq:\n    host: ${config.mq.host} #rabbitMQ服务器地址\n    port: ${config.mq.port}  #rabbitMQ服务器端口\n    username: ${config.mq.username}\n    password: ${config.mq.password}\n    virtual-host: ${config.mq.virtual-host}\n\n\nribbon:\n  ConnectTimeout: 1000 #ribbon请求连接的超时时间\n  ReadTimeout: 3000 #请求处理的超时时间\n  OkToRetryOnAllOperations: true #对所有请求操作都进行重试\n  MaxAutoRetries: 0 #对当前服务的重试次数（第一次分配给9082的时候，如果404，则再重试MaxAutoRetries次，如果还是404，则切换到其他服务MaxAutoRetriesNextServer决定）\n  MaxAutoRetriesNextServer: 5 #切换服务的次数(比如本次请求分配给9082处理，发现404，则切换分配给9081处理，如果还是404，则返回404给客户端）', 'a985406e271833be7f380a2460d2e35f', '2021-08-24 19:25:50', '2021-08-24 11:25:50', NULL, '192.168.137.1', 'U', 'pro');
INSERT INTO `his_config_info` VALUES (344, 419, 'learn-shop-core-order.yml', 'DEFAULT_GROUP', '', 'feign: #远程连接\n  hystrix: #熔断器配置\n    enabled: true #启动熔断器\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: true #Hystrix 是否启用超时时间\n        isolation:\n          thread:\n            timeoutInMilliseconds: 8000 #Hystrix断路器的超时时间，默认是1s，断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试\n          strategy: SEMAPHORE\nspring:\n  cloud:\n    nacos:\n      discovery:\n        namespace: ${config.register.namespace} # 命名空间\n        server-addr: ${config.register.serverAddr} # 配置注册中心\n    loadbalancer:\n      retry:\n        enabled: true #开启重试机制\n  rabbitmq:\n    host: ${config.mq.host} #rabbitMQ服务器地址\n    port: ${config.mq.port}  #rabbitMQ服务器端口\n    username: ${config.mq.username}\n    password: ${config.mq.password}\n    virtual-host: ${config.mq.virtual-host}\n\n\nribbon:\n  ConnectTimeout: 1000 #ribbon请求连接的超时时间\n  ReadTimeout: 3000 #请求处理的超时时间\n  OkToRetryOnAllOperations: true #对所有请求操作都进行重试\n  MaxAutoRetries: 0 #对当前服务的重试次数（第一次分配给9082的时候，如果404，则再重试MaxAutoRetries次，如果还是404，则切换到其他服务MaxAutoRetriesNextServer决定）\n  MaxAutoRetriesNextServer: 5 #切换服务的次数(比如本次请求分配给9082处理，发现404，则切换分配给9081处理，如果还是404，则返回404给客户端）', 'a985406e271833be7f380a2460d2e35f', '2021-08-24 19:26:09', '2021-08-24 11:26:09', NULL, '192.168.137.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (340, 420, 'sys-config-mq.properties', 'DEFAULT_GROUP', '', 'mq.service.ipAddress=127.0.0.1\n####################################################################################################\n################################################## mq配置 ###########################################\n####################################################################################################\n#mq的类型\nconfig.mq.type=rabbit\n#mq服务器地址\nconfig.mq.host=${mq.service.ipAddress}\n#mq用户名和密码\nconfig.mq.username=admin\nconfig.mq.password=admin123\n#mq服务器端口\nconfig.mq.port=5672\n#虚拟主机\nconfig.mq.virtual-host=/learn-default\n\n# 日志收集\nconfig.mq.exchange.logCollect=logCollectExchange\nconfig.mq.queue.logCollect=logCollectQueue\nconfig.mq.routeKey.logCollect=logCollectRouteKey\n\n# zuul 向 system 系统发出执行 sql 请求\nconfig.mq.exchange.executeSql=executeSqlExchange\nconfig.mq.queue.executeSql=executeSqlQueue\nconfig.mq.routeKey.executeSql=executeSqlRouteKey\n\n# job 发送自动任务执行请求\nconfig.mq.exchange.runJob=runJobExchange\n#测试用\nconfig.mq.queue.runJobTest=runJobTestQueue\nconfig.mq.routeKey.runJobTest=runJobTestRouteKey\n\n# 商品系统\nconfig.mq.exchange.product=productExchange\n# product 发送刷新es缓存请求\nconfig.mq.queue.refreshEs=refreshEsQueue\nconfig.mq.routeKey.refreshEs=refreshEsRouteKey\n\n# job 向 system 系统发出发送邮件请求\nconfig.mq.exchange.sendMail=sendMailExchange\n\nconfig.mq.queue.sendMail=sendmailQueue\nconfig.mq.routeKey.sendMail=sendmailRouteKey\n\nconfig.mq.queue.sendMailDlx=sendmailQueueDlx\nconfig.mq.routeKey.sendMailDlx=sendmailRouteKeyDlx\n\nconfig.mq.queue.sendMailTrt=sendmailQueueTrt\nconfig.mq.routeKey.sendMailTrt=sendmailRouteKeyTrt\n\n#测试用\nconfig.mq.ts.test=ts-test', '031cde371837cac3ee643e62e9216231', '2021-08-24 19:40:59', '2021-08-24 11:40:59', NULL, '192.168.137.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (340, 421, 'sys-config-mq.properties', 'DEFAULT_GROUP', '', 'mq.service.ipAddress=192.168.137.200\n####################################################################################################\n################################################## mq配置 ###########################################\n####################################################################################################\n#mq的类型\nconfig.mq.type=rabbit\n#mq服务器地址\nconfig.mq.host=${mq.service.ipAddress}\n#mq用户名和密码\nconfig.mq.username=admin\nconfig.mq.password=admin123\n#mq服务器端口\nconfig.mq.port=5672\n#虚拟主机\nconfig.mq.virtual-host=/learn-default\n\n# 日志收集\nconfig.mq.exchange.logCollect=logCollectExchange\nconfig.mq.queue.logCollect=logCollectQueue\nconfig.mq.routeKey.logCollect=logCollectRouteKey\n\n# zuul 向 system 系统发出执行 sql 请求\nconfig.mq.exchange.executeSql=executeSqlExchange\nconfig.mq.queue.executeSql=executeSqlQueue\nconfig.mq.routeKey.executeSql=executeSqlRouteKey\n\n# job 发送自动任务执行请求\nconfig.mq.exchange.runJobTest=runJobExchange\n#测试用\nconfig.mq.queue.runJobTest=runJobTestQueue\nconfig.mq.routeKey.runJobTest=runJobTestRouteKey\n\n# 商品系统\nconfig.mq.exchange.product=productExchange\n# product 发送刷新es缓存请求\nconfig.mq.queue.refreshEs=refreshEsQueue\nconfig.mq.routeKey.refreshEs=refreshEsRouteKey\n\n# 秒杀订单交换机\nconfig.mq.exchange.secKillOrder=secKillOrderExchange\n# 秒杀订单交换机（死信）\nconfig.mq.exchange.secKillOrderDlx=secKillOrderExchangeDlx\n# 秒杀成功后发送订单到order\nconfig.mq.queue.secKillToCoreOrder=secKillToCoreOrderQueue\n# 秒杀成功后发送订单到order（死信）\nconfig.mq.queue.secKillToCoreOrderDlx=secKillToCoreOrderQueueDlx\n# 秒杀成功后发送订单到system\nconfig.mq.queue.secKillToAdminSystem=secKillToAdminSystemQueue\n\n# job 向 system 系统发出发送邮件请求\nconfig.mq.exchange.sendMail=sendMailExchange\n\nconfig.mq.queue.sendMail=sendmailQueue\nconfig.mq.routeKey.sendMail=sendmailRouteKey\n\nconfig.mq.queue.sendMailDlx=sendmailQueueDlx\nconfig.mq.routeKey.sendMailDlx=sendmailRouteKeyDlx\n\nconfig.mq.queue.sendMailTrt=sendmailQueueTrt\nconfig.mq.routeKey.sendMailTrt=sendmailRouteKeyTrt\n\n#测试用\nconfig.mq.ts.test=ts-test', '1503fcf69627121ea72fcf42fefbdc19', '2021-08-24 19:41:28', '2021-08-24 11:41:28', NULL, '192.168.137.1', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (328, 422, 'sys-config-mq.properties', 'DEFAULT_GROUP', '', 'mq.service.ipAddress=192.168.137.200\n####################################################################################################\n################################################## mq配置 ###########################################\n####################################################################################################\n#mq的类型\nconfig.mq.type=rabbit\n#mq服务器地址\nconfig.mq.host=${mq.service.ipAddress}\n#mq用户名和密码\nconfig.mq.username=admin\nconfig.mq.password=admin123\n#mq服务器端口\nconfig.mq.port=5672\n#虚拟主机\nconfig.mq.virtual-host=/learn-default\n\n# 日志收集\nconfig.mq.exchange.logCollect=logCollectExchange\nconfig.mq.queue.logCollect=logCollectQueue\nconfig.mq.routeKey.logCollect=logCollectRouteKey\n\n# zuul 向 system 系统发出执行 sql 请求\nconfig.mq.exchange.executeSql=executeSqlExchange\nconfig.mq.queue.executeSql=executeSqlQueue\nconfig.mq.routeKey.executeSql=executeSqlRouteKey\n\n# job 发送自动任务执行请求\nconfig.mq.exchange.runJob=runJobExchange\n#测试用\nconfig.mq.queue.runJobTest=runJobTestQueue\nconfig.mq.routeKey.runJobTest=runJobTestRouteKey\n\n# 商品系统\nconfig.mq.exchange.product=productExchange\n# product 发送刷新es缓存请求\nconfig.mq.queue.refreshEs=refreshEsQueue\nconfig.mq.routeKey.refreshEs=refreshEsRouteKey\n\n\n# job 向 system 系统发出发送邮件请求\nconfig.mq.exchange.sendMail=sendMailExchange\n\nconfig.mq.queue.sendMail=sendmailQueue\nconfig.mq.routeKey.sendMail=sendmailRouteKey\n\nconfig.mq.queue.sendMailDlx=sendmailQueueDlx\nconfig.mq.routeKey.sendMailDlx=sendmailRouteKeyDlx\n\nconfig.mq.queue.sendMailTrt=sendmailQueueTrt\nconfig.mq.routeKey.sendMailTrt=sendmailRouteKeyTrt\n\n#测试用\nconfig.mq.ts.test=ts-test', '3ec5f21ec7a19a3d39a9add4c9a2ef14', '2021-08-24 19:41:45', '2021-08-24 11:41:46', NULL, '192.168.137.1', 'U', 'pro');
INSERT INTO `his_config_info` VALUES (357, 423, 'sys-config-db.yml', 'DEFAULT_GROUP', '', 'db.service.ipAddress: 192.168.137.200\n####################################################################################################\n############################################ 主从分离 sharding-jdbc hikari 数据源配置 ################\n####################################################################################################\nspring:\n  shardingsphere:\n    datasource:\n      names: master,slave1,slave2\n      master: # 主数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\n        username: learn_shop\n        password: pass123\n      slave1: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36006/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\n        username: learn_shop_r\n        password: pass123\n      slave2: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36007/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\n        username: learn_shop_r\n        password: pass123\n    masterslave:\n      load-balance-algorithm-type: round_robin\n      name: dataSource\n      master-data-source-name: master\n      slave-data-source-names: slave1,slave2\n    props:\n      sql: true # 显示SQL', 'c8250a2a7c66c386d0b3e12a6b16ec57', '2021-08-24 20:15:31', '2021-08-24 12:15:30', NULL, '192.168.137.1', 'U', 'pro');
INSERT INTO `his_config_info` VALUES (327, 424, 'sys-config-db.properties', 'DEFAULT_GROUP', '', 'db.service.ipAddress=192.168.137.200\n####################################################################################################\n############################################### hikari 数据源配置 ################\n####################################################################################################\n# jdbc_config  datasource\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\nspring.datasource.url=jdbc:mysql://${db.service.ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\nspring.datasource.username=learn_shop\nspring.datasource.password=pass123\n# Hikari will use the above plus the following to setup connection pooling\nspring.datasource.type=com.zaxxer.hikari.HikariDataSource\n# 最小空闲数\nspring.datasource.hikari.minimum-idle=5\n# 链接池最大数量\nspring.datasource.hikari.maximum-pool-size=15\nspring.datasource.hikari.auto-commit=true\nspring.datasource.hikari.idle-timeout=30000\nspring.datasource.hikari.pool-name=DatebookHikariCP\n# 配置为0则是永久不过期\nspring.datasource.hikari.max-lifetime=0\nspring.datasource.hikari.connection-timeout=30000\nspring.datasource.hikari.connection-test-query=SELECT 1\n', 'e1e957eceea95eec2239e9e3d112627e', '2021-08-24 20:23:19', '2021-08-24 12:23:19', NULL, '192.168.137.1', 'U', 'pro');
INSERT INTO `his_config_info` VALUES (357, 425, 'sys-config-db.yml', 'DEFAULT_GROUP', '', 'db.service.ipAddress: 192.168.137.200\n####################################################################################################\n############################################ 主从分离 sharding-jdbc hikari 数据源配置 ################\n####################################################################################################\nspring:\n  shardingsphere:\n    datasource:\n      names: master,slave1,slave2\n      master: # 主数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop\n        password: pass123\n      slave1: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36006/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop_r\n        password: pass123\n      slave2: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36007/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop_r\n        password: pass123\n    masterslave:\n      load-balance-algorithm-type: round_robin\n      name: dataSource\n      master-data-source-name: master\n      slave-data-source-names: slave1,slave2\n    props:\n      sql: true # 显示SQL', 'd822cfd2bc20028d834b9ebdfdfbcd39', '2021-08-24 20:24:17', '2021-08-24 12:24:18', NULL, '192.168.137.1', 'U', 'pro');
INSERT INTO `his_config_info` VALUES (357, 426, 'sys-config-db.yml', 'DEFAULT_GROUP', '', 'db.service.ipAddress: 192.168.137.200\n####################################################################################################\n############################################ 主从分离 sharding-jdbc hikari 数据源配置 ################\n####################################################################################################\nspring:\n  shardingsphere:\n    datasource:\n      names: master,slave1,slave2\n      master: # 主数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.137.200:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop\n        password: pass123\n      slave1: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.137.200:36006/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop_r\n        password: pass123\n      slave2: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://192.168.137.200:36007/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop_r\n        password: pass123\n    masterslave:\n      load-balance-algorithm-type: round_robin\n      name: dataSource\n      master-data-source-name: master\n      slave-data-source-names: slave1,slave2\n    props:\n      sql: true # 显示SQL', '760190f3708c34edef0dfbaa820f4f0f', '2021-08-24 20:28:40', '2021-08-24 12:28:41', NULL, '192.168.137.1', 'U', 'pro');
INSERT INTO `his_config_info` VALUES (357, 427, 'sys-config-db.yml', 'DEFAULT_GROUP', '', '123', '202cb962ac59075b964b07152d234b70', '2021-08-24 20:48:20', '2021-08-24 12:48:20', NULL, '192.168.137.1', 'U', 'pro');
INSERT INTO `his_config_info` VALUES (357, 428, 'sys-config-db.yml', 'DEFAULT_GROUP', '', 'db.service.ipAddress: 192.168.137.200\n####################################################################################################\n############################################ 主从分离 sharding-jdbc hikari 数据源配置 ################\n####################################################################################################\nspring:\n  shardingsphere:\n    datasource:\n      names: master,slave1,slave2\n      master: # 主数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop\n        password: pass123\n      slave1: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36006/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop_r\n        password: pass123\n      slave2: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36007/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop_r\n        password: pass123\n    masterslave:\n      load-balance-algorithm-type: round_robin\n      name: dataSource\n      master-data-source-name: master\n      slave-data-source-names: slave1,slave2\n    props:\n      sql: true # 显示SQL', 'd822cfd2bc20028d834b9ebdfdfbcd39', '2021-08-24 20:49:07', '2021-08-24 12:49:07', NULL, '192.168.137.1', 'U', 'pro');
INSERT INTO `his_config_info` VALUES (357, 429, 'sys-config-db.yml', 'DEFAULT_GROUP', '', 'db.service.ipAddress: 192.168.137.200\n####################################################################################################\n############################################ 主从分离 sharding-jdbc hikari 数据源配置 ################\n####################################################################################################\nspring:\n  shardingsphere:\n    datasource:\n      names: master,slave1,slave2\n      master: # 主数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://${db.service.ipAddress}:36005/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop\n        password: pass123\n      slave1: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://127.0.0.1:36006/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop_r\n        password: pass123\n      slave2: # 从数据源\n        type: com.zaxxer.hikari.HikariDataSource\n        driver-class: com.mysql.cj.jdbc.Driver\n        jdbc-url: jdbc:mysql://127.0.0.1:36007/learn?useUnicode=true&characterEncoding=utf8&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true\n        username: learn_shop_r\n        password: pass123\n    masterslave:\n      load-balance-algorithm-type: round_robin\n      name: dataSource\n      master-data-source-name: master\n      slave-data-source-names: slave1,slave2\n    props:\n      sql: true # 显示SQL', 'aac0ee319a7bba90538ef16193735f6a', '2021-08-24 20:51:56', '2021-08-24 12:51:56', NULL, '192.168.137.1', 'U', 'pro');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `resource` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role`, `resource`, `action`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 6 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (3, '1', 'seata-dev', 'seata-dev', 'seata 分布式事务-开发环境', 'nacos', 1614732471148, 1614732471148);
INSERT INTO `tenant_info` VALUES (4, '1', 'pro', 'pro', '生产', 'nacos', 1615533858715, 1615533993047);
INSERT INTO `tenant_info` VALUES (5, '1', 'dev', 'dev', '开发', 'nacos', 1615533876724, 1615533986301);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = DYNAMIC;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
