swagger: #接口注解文档
  basepackage: com.billow.gateway.api #必须要有 GetMapping，PostMapping...
  service:
    name: ${spring.application.name} #api名称
    version: 1.0
    description: 警告：此API仅用于测试，禁止任何商业用途，否则一切后果自行承担！！！ #api描述
    contact:
      developer: billow #api开发者
      url: https://github.com/Xiao-Y/learn
      email: lyongtao123@126.com #api开发者
server:
  port: ${config.zuul.server.port}

# 如果路由方式是serviceId的方式，那么ribbon的生效，如果是url的方式，则zuul.host开头的生效
ribbon:
  ReadTimeout: 15000
  ConnectTimeout: 10000

spring:
  application:
    name: learn-cloud-gateway
  resources: #指定静态资源路径，多个使用英文逗号隔开。如：html,js.jsp
    static-locations: ${config.gateway.static.locations}
  cloud:
    nacos:
      discovery:
        namespace: ${config.register.namespace} # 命名空间
        server-addr: ${config.register.serverAddr} # 配置注册中心
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: public-auth
          # lb代表从注册中心获取服务，且已负载均衡方式转发
          uri: lb://learn-shop-public-auth
          predicates:
            - Path=/public-auth/**
          # 加上StripPrefix=1，否则转发到后端服务时会带上consumer前缀
          filters:
            - StripPrefix=1
        - id: admin-system
          # lb代表从注册中心获取服务，且已负载均衡方式转发
          uri: lb://learn-shop-admin-system
          predicates:
            - Path=/admin-system/**
        - id: admin-user
          # lb代表从注册中心获取服务，且已负载均衡方式转发
          uri: lb://learn-shop-admin-user
          predicates:
            - Path=/admin-user/**
        - id: core-order
          # lb代表从注册中心获取服务，且已负载均衡方式转发
          uri: lb://learn-shop-core-order
          predicates:
            - Path=/core-order/**
        - id: core-product
          # lb代表从注册中心获取服务，且已负载均衡方式转发
          uri: lb://learn-shop-core-product
          predicates:
            - Path=/core-product/**
        - id: public-job
          # lb代表从注册中心获取服务，且已负载均衡方式转发
          uri: lb://learn-shop-public-job
          predicates:
            - Path=/public-job/**
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: 'http://localhost:8999/rsa/publicKey' # 获取公钥
secure:
  white-list:
    - "/actuator/**"
    - "/login/**"
    - "/public-auth/oauth/token" #获取token
    - "/userApi/*"  #获取用户信息
  need-check:
    - "/**/*Api/**"
    - "/*Api/**"







#zuul:
#  host:
#    socket-timeout-millis: 50000
#    connect-timeout-millis: 10000
###  #添加代理头
#  add-proxy-headers: true
##  #敏感头信息
#  sensitive-headers:
#  routes:
#    #服务认证和授权
#    public-auth:
#      path: /public-auth/**
##      serviceId: learn-shop-public-auth
##      url: http://119.23.27.78:8999
#      url: http://127.0.0.1:8999
#    #系统相关
#    admin-system:
#      path: /admin-system/**
#      strip-prefix: false
##      serviceId: learn-shop-admin-system
##      url: http://119.23.27.78:8811
#      url: http://127.0.0.1:8811
#    #用户相关
#    admin-user:
#      path: /admin-user/**
#      strip-prefix: false
#      serviceId: learn-shop-admin-user
#      url: http://119.23.27.78:8801
##      url: http://127.0.0.1:8801
#    #订单相关
#    core-order:
#      path: /core-order/**
#      serviceId: learn-shop-core-order
#    #商品相关
#    core-product:
#      path: /core-product/**
#      strip-prefix: false
##      serviceId: learn-shop-core-product
#      url: http://127.0.0.1:8911
#    public-job:
#      path: /public-job/**
#      strip-prefix: false
##      serviceId: learn-shop-public-job
#      url: http://119.23.27.78:8011
##      url: http://127.0.0.1:8011
# Logging configuration
logging:
  level: DEBUG

# security 配置
#security:
#  sessions: NEVER
#  oauth2:
#    client:
#      client-id: webapp
#      client-secret: webapp
#      scope: webapp
#      user-authorization-uri: ${custom.security.auth-server}/oauth/authorize #请求认证的地址
#      access-token-uri: ${custom.security.auth-server}/oauth/token #请求令牌的地址
#    resource:
#      user-info-uri: ${custom.security.auth-server}/user #获取用户信息的地址
#      prefer-token-info: false
# 自定义配置
#custom:
#  security:
#    auth-server: http://127.0.0.1:8999